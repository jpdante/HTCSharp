//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HtcSharp.HttpModule.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CoreStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CoreStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HtcSharp.HttpModule.Core.CoreStrings", typeof(CoreStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to bind to address {address}..
        /// </summary>
        internal static string AddressBindingFailed {
            get {
                return ResourceManager.GetString("AddressBindingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value between {min} and {max} is required..
        /// </summary>
        internal static string ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to authenticate HTTPS connection..
        /// </summary>
        internal static string AuthenticationFailed {
            get {
                return ResourceManager.GetString("AuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication of the HTTPS connection timed out..
        /// </summary>
        internal static string AuthenticationTimedOut {
            get {
                return ResourceManager.GetString("AuthenticationTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ASP.NET Core developer certificate is in an invalid state. To fix this issue, run the following commands &apos;dotnet dev-certs https --clean&apos; and &apos;dotnet dev-certs https&apos; to remove all existing ASP.NET Core development certificates and create a new untrusted developer certificate. On macOS or Windows, use &apos;dotnet dev-certs https --trust&apos; to trust the new certificate..
        /// </summary>
        internal static string BadDeveloperCertificateState {
            get {
                return ResourceManager.GetString("BadDeveloperCertificateState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad request..
        /// </summary>
        internal static string BadRequest {
            get {
                return ResourceManager.GetString("BadRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad chunk size data..
        /// </summary>
        internal static string BadRequest_BadChunkSizeData {
            get {
                return ResourceManager.GetString("BadRequest_BadChunkSizeData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad chunk suffix..
        /// </summary>
        internal static string BadRequest_BadChunkSuffix {
            get {
                return ResourceManager.GetString("BadRequest_BadChunkSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chunked request incomplete..
        /// </summary>
        internal static string BadRequest_ChunkedRequestIncomplete {
            get {
                return ResourceManager.GetString("BadRequest_ChunkedRequestIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message body length cannot be determined because the final transfer coding was set to &apos;{detail}&apos; instead of &apos;chunked&apos;..
        /// </summary>
        internal static string BadRequest_FinalTransferCodingNotChunked {
            get {
                return ResourceManager.GetString("BadRequest_FinalTransferCodingNotChunked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request headers too long..
        /// </summary>
        internal static string BadRequest_HeadersExceedMaxTotalSize {
            get {
                return ResourceManager.GetString("BadRequest_HeadersExceedMaxTotalSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid characters in header name..
        /// </summary>
        internal static string BadRequest_InvalidCharactersInHeaderName {
            get {
                return ResourceManager.GetString("BadRequest_InvalidCharactersInHeaderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid content length: {detail}.
        /// </summary>
        internal static string BadRequest_InvalidContentLength_Detail {
            get {
                return ResourceManager.GetString("BadRequest_InvalidContentLength_Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Host header..
        /// </summary>
        internal static string BadRequest_InvalidHostHeader {
            get {
                return ResourceManager.GetString("BadRequest_InvalidHostHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Host header: &apos;{detail}&apos;.
        /// </summary>
        internal static string BadRequest_InvalidHostHeader_Detail {
            get {
                return ResourceManager.GetString("BadRequest_InvalidHostHeader_Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid request header: &apos;{detail}&apos;.
        /// </summary>
        internal static string BadRequest_InvalidRequestHeader_Detail {
            get {
                return ResourceManager.GetString("BadRequest_InvalidRequestHeader_Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid request headers: missing final CRLF in header fields..
        /// </summary>
        internal static string BadRequest_InvalidRequestHeadersNoCRLF {
            get {
                return ResourceManager.GetString("BadRequest_InvalidRequestHeadersNoCRLF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid request line..
        /// </summary>
        internal static string BadRequest_InvalidRequestLine {
            get {
                return ResourceManager.GetString("BadRequest_InvalidRequestLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid request line: &apos;{detail}&apos;.
        /// </summary>
        internal static string BadRequest_InvalidRequestLine_Detail {
            get {
                return ResourceManager.GetString("BadRequest_InvalidRequestLine_Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid request target: &apos;{detail}&apos;.
        /// </summary>
        internal static string BadRequest_InvalidRequestTarget_Detail {
            get {
                return ResourceManager.GetString("BadRequest_InvalidRequestTarget_Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {detail} request contains no Content-Length or Transfer-Encoding header..
        /// </summary>
        internal static string BadRequest_LengthRequired {
            get {
                return ResourceManager.GetString("BadRequest_LengthRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {detail} request contains no Content-Length header..
        /// </summary>
        internal static string BadRequest_LengthRequiredHttp10 {
            get {
                return ResourceManager.GetString("BadRequest_LengthRequiredHttp10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Malformed request: invalid headers..
        /// </summary>
        internal static string BadRequest_MalformedRequestInvalidHeaders {
            get {
                return ResourceManager.GetString("BadRequest_MalformedRequestInvalidHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method not allowed..
        /// </summary>
        internal static string BadRequest_MethodNotAllowed {
            get {
                return ResourceManager.GetString("BadRequest_MethodNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request is missing Host header..
        /// </summary>
        internal static string BadRequest_MissingHostHeader {
            get {
                return ResourceManager.GetString("BadRequest_MissingHostHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Content-Length headers..
        /// </summary>
        internal static string BadRequest_MultipleContentLengths {
            get {
                return ResourceManager.GetString("BadRequest_MultipleContentLengths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Host headers..
        /// </summary>
        internal static string BadRequest_MultipleHostHeaders {
            get {
                return ResourceManager.GetString("BadRequest_MultipleHostHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading the request body timed out due to data arriving too slowly. See MinRequestBodyDataRate..
        /// </summary>
        internal static string BadRequest_RequestBodyTimeout {
            get {
                return ResourceManager.GetString("BadRequest_RequestBodyTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request body too large..
        /// </summary>
        internal static string BadRequest_RequestBodyTooLarge {
            get {
                return ResourceManager.GetString("BadRequest_RequestBodyTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading the request headers timed out..
        /// </summary>
        internal static string BadRequest_RequestHeadersTimeout {
            get {
                return ResourceManager.GetString("BadRequest_RequestHeadersTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request line too long..
        /// </summary>
        internal static string BadRequest_RequestLineTooLong {
            get {
                return ResourceManager.GetString("BadRequest_RequestLineTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request contains too many headers..
        /// </summary>
        internal static string BadRequest_TooManyHeaders {
            get {
                return ResourceManager.GetString("BadRequest_TooManyHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected end of request content..
        /// </summary>
        internal static string BadRequest_UnexpectedEndOfRequestContent {
            get {
                return ResourceManager.GetString("BadRequest_UnexpectedEndOfRequestContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized HTTP version: &apos;{detail}&apos;.
        /// </summary>
        internal static string BadRequest_UnrecognizedHTTPVersion {
            get {
                return ResourceManager.GetString("BadRequest_UnrecognizedHTTPVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requests with &apos;Connection: Upgrade&apos; cannot have content in the request body..
        /// </summary>
        internal static string BadRequest_UpgradeRequestCannotHavePayload {
            get {
                return ResourceManager.GetString("BadRequest_UpgradeRequestCannotHavePayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kestrel does not support big-endian architectures..
        /// </summary>
        internal static string BigEndianNotSupported {
            get {
                return ResourceManager.GetString("BigEndianNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No listening endpoints were configured. Binding to {address} by default..
        /// </summary>
        internal static string BindingToDefaultAddress {
            get {
                return ResourceManager.GetString("BindingToDefaultAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No listening endpoints were configured. Binding to {address0} and {address1} by default..
        /// </summary>
        internal static string BindingToDefaultAddresses {
            get {
                return ResourceManager.GetString("BindingToDefaultAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot upgrade a non-upgradable request. Check IHttpUpgradeFeature.IsUpgradableRequest to determine if a request can be upgraded..
        /// </summary>
        internal static string CannotUpgradeNonUpgradableRequest {
            get {
                return ResourceManager.GetString("CannotUpgradeNonUpgradableRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested certificate {subject} could not be found in {storeLocation}/{storeName} with AllowInvalid setting: {allowInvalid}..
        /// </summary>
        internal static string CertNotFoundInStore {
            get {
                return ResourceManager.GetString("CertNotFoundInStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Concurrent timeouts are not supported..
        /// </summary>
        internal static string ConcurrentTimeoutsNotSupported {
            get {
                return ResourceManager.GetString("ConcurrentTimeoutsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTPS endpoints can only be configured using {methodName}..
        /// </summary>
        internal static string ConfigureHttpsFromMethodCall {
            get {
                return ResourceManager.GetString("ConfigureHttpsFromMethodCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A path base can only be configured using {methodName}..
        /// </summary>
        internal static string ConfigurePathBaseFromMethodCall {
            get {
                return ResourceManager.GetString("ConfigurePathBaseFromMethodCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection was aborted by the application..
        /// </summary>
        internal static string ConnectionAbortedByApplication {
            get {
                return ResourceManager.GetString("ConnectionAbortedByApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client closed the connection..
        /// </summary>
        internal static string ConnectionAbortedByClient {
            get {
                return ResourceManager.GetString("ConnectionAbortedByClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection was aborted because the server is shutting down and request processing didn&apos;t complete within the time specified by HostOptions.ShutdownTimeout..
        /// </summary>
        internal static string ConnectionAbortedDuringServerShutdown {
            get {
                return ResourceManager.GetString("ConnectionAbortedDuringServerShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection or stream was aborted because a write operation was aborted with a CancellationToken..
        /// </summary>
        internal static string ConnectionOrStreamAbortedByCancellationToken {
            get {
                return ResourceManager.GetString("ConnectionOrStreamAbortedByCancellationToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection shutdown abnormally..
        /// </summary>
        internal static string ConnectionShutdownError {
            get {
                return ResourceManager.GetString("ConnectionShutdownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection was timed out by the server because the response was not read by the client at the specified minimum data rate..
        /// </summary>
        internal static string ConnectionTimedBecauseResponseMininumDataRateNotSatisfied {
            get {
                return ResourceManager.GetString("ConnectionTimedBecauseResponseMininumDataRateNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection was timed out by the server..
        /// </summary>
        internal static string ConnectionTimedOutByServer {
            get {
                return ResourceManager.GetString("ConnectionTimedOutByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamic port binding is not supported when binding to localhost. You must either bind to 127.0.0.1:0 or [::1]:0, or both..
        /// </summary>
        internal static string DynamicPortOnLocalhostNotSupported {
            get {
                return ResourceManager.GetString("DynamicPortOnLocalhostNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to bind to address {endpoint}: address already in use..
        /// </summary>
        internal static string EndpointAlreadyInUse {
            get {
                return ResourceManager.GetString("EndpointAlreadyInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP/2 over TLS was not negotiated on an HTTP/2-only endpoint..
        /// </summary>
        internal static string EndPointHttp2NotNegotiated {
            get {
                return ResourceManager.GetString("EndPointHttp2NotNegotiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint {endpointName} is missing the required &apos;Url&apos; parameter..
        /// </summary>
        internal static string EndpointMissingUrl {
            get {
                return ResourceManager.GetString("EndpointMissingUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An endpoint must be configured to serve at least one protocol..
        /// </summary>
        internal static string EndPointRequiresAtLeastOneProtocol {
            get {
                return ResourceManager.GetString("EndPointRequiresAtLeastOneProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to bind to http://[::]:{port} (IPv6Any). Attempting to bind to http://0.0.0.0:{port} instead..
        /// </summary>
        internal static string FallbackToIPv4Any {
            get {
                return ResourceManager.GetString("FallbackToIPv4Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value greater than zero is required..
        /// </summary>
        internal static string GreaterThanZeroRequired {
            get {
                return ResourceManager.GetString("GreaterThanZeroRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the header {name} is not allowed on responses with status code {statusCode}..
        /// </summary>
        internal static string HeaderNotAllowedOnResponse {
            get {
                return ResourceManager.GetString("HeaderNotAllowedOnResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headers are read-only, response has already started..
        /// </summary>
        internal static string HeadersAreReadOnly {
            get {
                return ResourceManager.GetString("HeadersAreReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamic tables size update did not occur at the beginning of the first header block..
        /// </summary>
        internal static string HPackErrorDynamicTableSizeUpdateNotAtBeginningOfHeaderBlock {
            get {
                return ResourceManager.GetString("HPackErrorDynamicTableSizeUpdateNotAtBeginningOfHeaderBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dynamic table size of {size} octets is greater than the configured maximum size of {maxSize} octets..
        /// </summary>
        internal static string HPackErrorDynamicTableSizeUpdateTooLarge {
            get {
                return ResourceManager.GetString("HPackErrorDynamicTableSizeUpdateTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The header block was incomplete and could not be fully decoded..
        /// </summary>
        internal static string HPackErrorIncompleteHeaderBlock {
            get {
                return ResourceManager.GetString("HPackErrorIncompleteHeaderBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index {index} is outside the bounds of the header field table..
        /// </summary>
        internal static string HPackErrorIndexOutOfRange {
            get {
                return ResourceManager.GetString("HPackErrorIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decoded integer exceeds the maximum value of Int32.MaxValue..
        /// </summary>
        internal static string HPackErrorIntegerTooBig {
            get {
                return ResourceManager.GetString("HPackErrorIntegerTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given buffer was too small to encode any headers..
        /// </summary>
        internal static string HPackErrorNotEnoughBuffer {
            get {
                return ResourceManager.GetString("HPackErrorNotEnoughBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Huffman decoding error..
        /// </summary>
        internal static string HPackHuffmanError {
            get {
                return ResourceManager.GetString("HPackHuffmanError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination buffer is not large enough to store the decoded data..
        /// </summary>
        internal static string HPackHuffmanErrorDestinationTooSmall {
            get {
                return ResourceManager.GetString("HPackHuffmanErrorDestinationTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input data contains the EOS symbol..
        /// </summary>
        internal static string HPackHuffmanErrorEOS {
            get {
                return ResourceManager.GetString("HPackHuffmanErrorEOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input data could not be fully decoded..
        /// </summary>
        internal static string HPackHuffmanErrorIncomplete {
            get {
                return ResourceManager.GetString("HPackHuffmanErrorIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decoded string length of {length} octets is greater than the configured maximum length of {maxStringLength} octets..
        /// </summary>
        internal static string HPackStringLengthTooLarge {
            get {
                return ResourceManager.GetString("HPackStringLengthTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP/2 connection faulted..
        /// </summary>
        internal static string Http2ConnectionFaulted {
            get {
                return ResourceManager.GetString("Http2ConnectionFaulted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request headers contain connection-specific header field..
        /// </summary>
        internal static string Http2ErrorConnectionSpecificHeaderField {
            get {
                return ResourceManager.GetString("Http2ErrorConnectionSpecificHeaderField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CONNECT requests must not send :scheme or :path headers..
        /// </summary>
        internal static string Http2ErrorConnectMustNotSendSchemeOrPath {
            get {
                return ResourceManager.GetString("Http2ErrorConnectMustNotSendSchemeOrPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a CONTINUATION frame not preceded by a HEADERS frame..
        /// </summary>
        internal static string Http2ErrorContinuationWithNoHeaders {
            get {
                return ResourceManager.GetString("Http2ErrorContinuationWithNoHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request headers contain duplicate pseudo-header field..
        /// </summary>
        internal static string Http2ErrorDuplicatePseudoHeaderField {
            get {
                return ResourceManager.GetString("Http2ErrorDuplicatePseudoHeaderField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent more data than what was available in the flow-control window..
        /// </summary>
        internal static string Http2ErrorFlowControlWindowExceeded {
            get {
                return ResourceManager.GetString("Http2ErrorFlowControlWindowExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The received frame size of {size} exceeds the limit {limit}..
        /// </summary>
        internal static string Http2ErrorFrameOverLimit {
            get {
                return ResourceManager.GetString("Http2ErrorFrameOverLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a header with uppercase characters in its name..
        /// </summary>
        internal static string Http2ErrorHeaderNameUppercase {
            get {
                return ResourceManager.GetString("Http2ErrorHeaderNameUppercase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame to stream ID {streamId} before signaling of the header block for stream ID {headersStreamId}..
        /// </summary>
        internal static string Http2ErrorHeadersInterleaved {
            get {
                return ResourceManager.GetString("Http2ErrorHeadersInterleaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a HEADERS frame containing trailers without setting the END_STREAM flag..
        /// </summary>
        internal static string Http2ErrorHeadersWithTrailersNoEndStream {
            get {
                return ResourceManager.GetString("Http2ErrorHeadersWithTrailersNoEndStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a SETTINGS frame with a SETTINGS_INITIAL_WINDOW_SIZE that caused a flow-control window to exceed the maximum size..
        /// </summary>
        internal static string Http2ErrorInitialWindowSizeInvalid {
            get {
                return ResourceManager.GetString("Http2ErrorInitialWindowSizeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid HTTP/2 connection preface..
        /// </summary>
        internal static string Http2ErrorInvalidPreface {
            get {
                return ResourceManager.GetString("Http2ErrorInvalidPreface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new stream was refused because this connection has reached its stream limit..
        /// </summary>
        internal static string Http2ErrorMaxStreams {
            get {
                return ResourceManager.GetString("Http2ErrorMaxStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Method &apos;{method}&apos; is invalid..
        /// </summary>
        internal static string Http2ErrorMethodInvalid {
            get {
                return ResourceManager.GetString("Http2ErrorMethodInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tls 1.2 or later must be used for HTTP/2. {protocol} was negotiated..
        /// </summary>
        internal static string Http2ErrorMinTlsVersion {
            get {
                return ResourceManager.GetString("Http2ErrorMinTlsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request headers missing one or more mandatory pseudo-header fields..
        /// </summary>
        internal static string Http2ErrorMissingMandatoryPseudoHeaderFields {
            get {
                return ResourceManager.GetString("Http2ErrorMissingMandatoryPseudoHeaderFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame with padding longer than or with the same length as the sent data..
        /// </summary>
        internal static string Http2ErrorPaddingTooLong {
            get {
                return ResourceManager.GetString("Http2ErrorPaddingTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pseudo-header field found in request headers after regular header fields..
        /// </summary>
        internal static string Http2ErrorPseudoHeaderFieldAfterRegularHeaders {
            get {
                return ResourceManager.GetString("Http2ErrorPseudoHeaderFieldAfterRegularHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a A PUSH_PROMISE frame..
        /// </summary>
        internal static string Http2ErrorPushPromiseReceived {
            get {
                return ResourceManager.GetString("Http2ErrorPushPromiseReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request headers contain response-specific pseudo-header field..
        /// </summary>
        internal static string Http2ErrorResponsePseudoHeaderField {
            get {
                return ResourceManager.GetString("Http2ErrorResponsePseudoHeaderField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a SETTINGS frame with ACK set and length different than 0..
        /// </summary>
        internal static string Http2ErrorSettingsAckLengthNotZero {
            get {
                return ResourceManager.GetString("Http2ErrorSettingsAckLengthNotZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a SETTINGS frame with a length that is not a multiple of 6..
        /// </summary>
        internal static string Http2ErrorSettingsLengthNotMultipleOfSix {
            get {
                return ResourceManager.GetString("Http2ErrorSettingsLengthNotMultipleOfSix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a SETTINGS frame with a value for parameter {parameter} that is out of range..
        /// </summary>
        internal static string Http2ErrorSettingsParameterOutOfRange {
            get {
                return ResourceManager.GetString("Http2ErrorSettingsParameterOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A frame of type {frameType} was received after stream {streamId} was reset or aborted..
        /// </summary>
        internal static string Http2ErrorStreamAborted {
            get {
                return ResourceManager.GetString("Http2ErrorStreamAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame to closed stream ID {streamId}..
        /// </summary>
        internal static string Http2ErrorStreamClosed {
            get {
                return ResourceManager.GetString("Http2ErrorStreamClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame to stream ID {streamId} which is in the &quot;half-closed (remote) state&quot;..
        /// </summary>
        internal static string Http2ErrorStreamHalfClosedRemote {
            get {
                return ResourceManager.GetString("Http2ErrorStreamHalfClosedRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame with even stream ID {streamId}..
        /// </summary>
        internal static string Http2ErrorStreamIdEven {
            get {
                return ResourceManager.GetString("Http2ErrorStreamIdEven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame to idle stream ID {streamId}..
        /// </summary>
        internal static string Http2ErrorStreamIdle {
            get {
                return ResourceManager.GetString("Http2ErrorStreamIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame with stream ID different than 0..
        /// </summary>
        internal static string Http2ErrorStreamIdNotZero {
            get {
                return ResourceManager.GetString("Http2ErrorStreamIdNotZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame with stream ID 0..
        /// </summary>
        internal static string Http2ErrorStreamIdZero {
            get {
                return ResourceManager.GetString("Http2ErrorStreamIdZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame with dependency information that would cause stream ID {streamId} to depend on itself..
        /// </summary>
        internal static string Http2ErrorStreamSelfDependency {
            get {
                return ResourceManager.GetString("Http2ErrorStreamSelfDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a trailer with uppercase characters in its name..
        /// </summary>
        internal static string Http2ErrorTrailerNameUppercase {
            get {
                return ResourceManager.GetString("Http2ErrorTrailerNameUppercase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent trailers containing one or more pseudo-header fields..
        /// </summary>
        internal static string Http2ErrorTrailersContainPseudoHeaderField {
            get {
                return ResourceManager.GetString("Http2ErrorTrailersContainPseudoHeaderField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a {frameType} frame with length different than {expectedLength}..
        /// </summary>
        internal static string Http2ErrorUnexpectedFrameLength {
            get {
                return ResourceManager.GetString("Http2ErrorUnexpectedFrameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request headers contain unknown pseudo-header field..
        /// </summary>
        internal static string Http2ErrorUnknownPseudoHeaderField {
            get {
                return ResourceManager.GetString("Http2ErrorUnknownPseudoHeaderField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a WINDOW_UPDATE frame with a window size increment of 0..
        /// </summary>
        internal static string Http2ErrorWindowUpdateIncrementZero {
            get {
                return ResourceManager.GetString("Http2ErrorWindowUpdateIncrementZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client sent a WINDOW_UPDATE frame that caused a flow-control window to exceed the maximum size..
        /// </summary>
        internal static string Http2ErrorWindowUpdateSizeInvalid {
            get {
                return ResourceManager.GetString("Http2ErrorWindowUpdateSizeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature is not supported for HTTP/2 requests except to disable it entirely by setting the rate to null..
        /// </summary>
        internal static string Http2MinDataRateNotSupported {
            get {
                return ResourceManager.GetString("Http2MinDataRateNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP/2 over TLS is not supported on macOS due to missing ALPN support..
        /// </summary>
        internal static string HTTP2NoTlsOsx {
            get {
                return ResourceManager.GetString("HTTP2NoTlsOsx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP/2 over TLS is not supported on Windows 7 due to missing ALPN support..
        /// </summary>
        internal static string HTTP2NoTlsWin7 {
            get {
                return ResourceManager.GetString("HTTP2NoTlsWin7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request stream was aborted..
        /// </summary>
        internal static string Http2StreamAborted {
            get {
                return ResourceManager.GetString("Http2StreamAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred after the response headers were sent, a reset is being sent..
        /// </summary>
        internal static string Http2StreamErrorAfterHeaders {
            get {
                return ResourceManager.GetString("Http2StreamErrorAfterHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Less data received than specified in the Content-Length header..
        /// </summary>
        internal static string Http2StreamErrorLessDataThanLength {
            get {
                return ResourceManager.GetString("Http2StreamErrorLessDataThanLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More data received than specified in the Content-Length header..
        /// </summary>
        internal static string Http2StreamErrorMoreDataThanLength {
            get {
                return ResourceManager.GetString("Http2StreamErrorMoreDataThanLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request :path is invalid: &apos;{path}&apos;.
        /// </summary>
        internal static string Http2StreamErrorPathInvalid {
            get {
                return ResourceManager.GetString("Http2StreamErrorPathInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request :scheme header &apos;{requestScheme}&apos; does not match the transport scheme &apos;{transportScheme}&apos;..
        /// </summary>
        internal static string Http2StreamErrorSchemeMismatch {
            get {
                return ResourceManager.GetString("Http2StreamErrorSchemeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP/2 stream was reset by the application with error code {errorCode}..
        /// </summary>
        internal static string Http2StreamResetByApplication {
            get {
                return ResourceManager.GetString("Http2StreamResetByApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client reset the request stream..
        /// </summary>
        internal static string Http2StreamResetByClient {
            get {
                return ResourceManager.GetString("Http2StreamResetByClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new stream was refused because this connection has too many streams that haven&apos;t finished processing. This may happen if many streams are aborted but not yet cleaned up..
        /// </summary>
        internal static string Http2TellClientToCalmDown {
            get {
                return ResourceManager.GetString("Http2TellClientToCalmDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid non-ASCII or control character in header: {character}.
        /// </summary>
        internal static string InvalidAsciiOrControlChar {
            get {
                return ResourceManager.GetString("InvalidAsciiOrControlChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Content-Length: &quot;{value}&quot;. Value must be a positive integral number..
        /// </summary>
        internal static string InvalidContentLength_InvalidNumber {
            get {
                return ResourceManager.GetString("InvalidContentLength_InvalidNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header name cannot be a null or empty string..
        /// </summary>
        internal static string InvalidEmptyHeaderName {
            get {
                return ResourceManager.GetString("InvalidEmptyHeaderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate {thumbprint} cannot be used as an SSL server certificate. It has an Extended Key Usage extension but the usages do not include Server Authentication (OID 1.3.6.1.5.5.7.3.1)..
        /// </summary>
        internal static string InvalidServerCertificateEku {
            get {
                return ResourceManager.GetString("InvalidServerCertificateEku", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL: &apos;{url}&apos;..
        /// </summary>
        internal static string InvalidUrl {
            get {
                return ResourceManager.GetString("InvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An item with the same key has already been added..
        /// </summary>
        internal static string KeyAlreadyExists {
            get {
                return ResourceManager.GetString("KeyAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum request body size cannot be modified after the app has already started reading from the request body..
        /// </summary>
        internal static string MaxRequestBodySizeCannotBeModifiedAfterRead {
            get {
                return ResourceManager.GetString("MaxRequestBodySizeCannotBeModifiedAfterRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum request body size cannot be modified after the request has been upgraded..
        /// </summary>
        internal static string MaxRequestBodySizeCannotBeModifiedForUpgradedRequests {
            get {
                return ResourceManager.GetString("MaxRequestBodySizeCannotBeModifiedForUpgradedRequests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum request buffer size ({requestBufferSize}) must be greater than or equal to maximum request header size ({requestHeaderSize})..
        /// </summary>
        internal static string MaxRequestBufferSmallerThanRequestHeaderBuffer {
            get {
                return ResourceManager.GetString("MaxRequestBufferSmallerThanRequestHeaderBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum request buffer size ({requestBufferSize}) must be greater than or equal to maximum request line size ({requestLineSize})..
        /// </summary>
        internal static string MaxRequestBufferSmallerThanRequestLineBuffer {
            get {
                return ResourceManager.GetString("MaxRequestBufferSmallerThanRequestLineBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request body rate enforcement grace period must be greater than {heartbeatInterval} second..
        /// </summary>
        internal static string MinimumGracePeriodRequired {
            get {
                return ResourceManager.GetString("MinimumGracePeriodRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint {endpointName} specified multiple certificate sources..
        /// </summary>
        internal static string MultipleCertificateSources {
            get {
                return ResourceManager.GetString("MultipleCertificateSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to bind to {address} on the {interfaceName} interface: &apos;{error}&apos;..
        /// </summary>
        internal static string NetworkInterfaceBindingFailed {
            get {
                return ResourceManager.GetString("NetworkInterfaceBindingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to configure HTTPS endpoint. No server certificate was specified, and the default developer certificate could not be found or is out of date.
        ///To generate a developer certificate run &apos;dotnet dev-certs https&apos;. To trust the certificate (Windows and macOS only) run &apos;dotnet dev-certs https --trust&apos;.
        ///For more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054..
        /// </summary>
        internal static string NoCertSpecifiedNoDevelopmentCertificateFound {
            get {
                return ResourceManager.GetString("NoCertSpecifiedNoDevelopmentCertificateFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be null or a non-negative number..
        /// </summary>
        internal static string NonNegativeNumberOrNullRequired {
            get {
                return ResourceManager.GetString("NonNegativeNumberOrNullRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be a non-negative number..
        /// </summary>
        internal static string NonNegativeNumberRequired {
            get {
                return ResourceManager.GetString("NonNegativeNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be a non-negative TimeSpan..
        /// </summary>
        internal static string NonNegativeTimeSpanRequired {
            get {
                return ResourceManager.GetString("NonNegativeTimeSpanRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overriding address(es) &apos;{addresses}&apos;. Binding to endpoints defined in {methodName} instead..
        /// </summary>
        internal static string OverridingWithKestrelOptions {
            get {
                return ResourceManager.GetString("OverridingWithKestrelOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overriding endpoints defined in UseKestrel() because {settingName} is set to true. Binding to address(es) &apos;{addresses}&apos; instead..
        /// </summary>
        internal static string OverridingWithPreferHostingUrls {
            get {
                return ResourceManager.GetString("OverridingWithPreferHostingUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {name} cannot be set because the response has already started..
        /// </summary>
        internal static string ParameterReadOnlyAfterResponseStarted {
            get {
                return ResourceManager.GetString("ParameterReadOnlyAfterResponseStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timespan must be positive and finite..
        /// </summary>
        internal static string PositiveFiniteTimeSpanRequired {
            get {
                return ResourceManager.GetString("PositiveFiniteTimeSpanRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be a positive number. To disable a minimum data rate, use null where a MinDataRate instance is expected..
        /// </summary>
        internal static string PositiveNumberOrNullMinDataRateRequired {
            get {
                return ResourceManager.GetString("PositiveNumberOrNullMinDataRateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be null or a positive number..
        /// </summary>
        internal static string PositiveNumberOrNullRequired {
            get {
                return ResourceManager.GetString("PositiveNumberOrNullRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be a positive number..
        /// </summary>
        internal static string PositiveNumberRequired {
            get {
                return ResourceManager.GetString("PositiveNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be a positive TimeSpan..
        /// </summary>
        internal static string PositiveTimeSpanRequired {
            get {
                return ResourceManager.GetString("PositiveTimeSpanRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be a positive TimeSpan..
        /// </summary>
        internal static string PositiveTimeSpanRequired1 {
            get {
                return ResourceManager.GetString("PositiveTimeSpanRequired1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP protocol selection failed..
        /// </summary>
        internal static string ProtocolSelectionFailed {
            get {
                return ResourceManager.GetString("ProtocolSelectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request processing didn&apos;t complete within the shutdown timeout..
        /// </summary>
        internal static string RequestProcessingAborted {
            get {
                return ResourceManager.GetString("RequestProcessingAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection processing ended abnormally..
        /// </summary>
        internal static string RequestProcessingEndError {
            get {
                return ResourceManager.GetString("RequestProcessingEndError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request trailers are not available yet. They may not be available until the full request body is read..
        /// </summary>
        internal static string RequestTrailersNotAvailable {
            get {
                return ResourceManager.GetString("RequestTrailersNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write to response body after connection has been upgraded..
        /// </summary>
        internal static string ResponseStreamWasUpgraded {
            get {
                return ResourceManager.GetString("ResponseStreamWasUpgraded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server has already started..
        /// </summary>
        internal static string ServerAlreadyStarted {
            get {
                return ResourceManager.GetString("ServerAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server certificate parameter is required..
        /// </summary>
        internal static string ServerCertificateRequired {
            get {
                return ResourceManager.GetString("ServerCertificateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server shutdown started during connection initialization..
        /// </summary>
        internal static string ServerShutdownDuringConnectionInitialization {
            get {
                return ResourceManager.GetString("ServerShutdownDuringConnectionInitialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot call GetMemory() until response has started. Call HttpResponse.StartAsync() before calling GetMemory()..
        /// </summary>
        internal static string StartAsyncBeforeGetMemory {
            get {
                return ResourceManager.GetString("StartAsyncBeforeGetMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronous operations are disallowed. Call ReadAsync or set AllowSynchronousIO to true instead..
        /// </summary>
        internal static string SynchronousReadsDisallowed {
            get {
                return ResourceManager.GetString("SynchronousReadsDisallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead..
        /// </summary>
        internal static string SynchronousWritesDisallowed {
            get {
                return ResourceManager.GetString("SynchronousWritesDisallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response Content-Length mismatch: too few bytes written ({written} of {expected})..
        /// </summary>
        internal static string TooFewBytesWritten {
            get {
                return ResourceManager.GetString("TooFewBytesWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response Content-Length mismatch: too many bytes written ({written} of {expected})..
        /// </summary>
        internal static string TooManyBytesWritten {
            get {
                return ResourceManager.GetString("TooManyBytesWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to configure default https bindings because no IDefaultHttpsProvider service was provided..
        /// </summary>
        internal static string UnableToConfigureHttpsBindings {
            get {
                return ResourceManager.GetString("UnableToConfigureHttpsBindings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response has been aborted due to an unhandled application exception..
        /// </summary>
        internal static string UnhandledApplicationException {
            get {
                return ResourceManager.GetString("UnhandledApplicationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unix socket path must be absolute..
        /// </summary>
        internal static string UnixSocketPathMustBeAbsolute {
            get {
                return ResourceManager.GetString("UnixSocketPathMustBeAbsolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown transport mode: &apos;{mode}&apos;..
        /// </summary>
        internal static string UnknownTransportMode {
            get {
                return ResourceManager.GetString("UnknownTransportMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized scheme in server address &apos;{address}&apos;. Only &apos;http://&apos; is supported..
        /// </summary>
        internal static string UnsupportedAddressScheme {
            get {
                return ResourceManager.GetString("UnsupportedAddressScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IHttpUpgradeFeature.UpgradeAsync was already called and can only be called once per connection..
        /// </summary>
        internal static string UpgradeCannotBeCalledMultipleTimes {
            get {
                return ResourceManager.GetString("UpgradeCannotBeCalledMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request cannot be upgraded because the server has already opened the maximum number of upgraded connections..
        /// </summary>
        internal static string UpgradedConnectionLimitReached {
            get {
                return ResourceManager.GetString("UpgradedConnectionLimitReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write to the response body, the response has completed..
        /// </summary>
        internal static string WritingToResponseBodyAfterResponseCompleted {
            get {
                return ResourceManager.GetString("WritingToResponseBodyAfterResponseCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing to the response body is invalid for responses with status code {statusCode}..
        /// </summary>
        internal static string WritingToResponseBodyNotSupported {
            get {
                return ResourceManager.GetString("WritingToResponseBodyNotSupported", resourceCulture);
            }
        }
    }
}
